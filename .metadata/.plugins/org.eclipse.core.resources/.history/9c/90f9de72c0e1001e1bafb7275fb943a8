/*
 * Copyright 2024 Tedd OKANO
 *
 * SPDX-License-Identifier: BSD-3-Clause
 *
 */

#include	"r01lib.h"
r01lib_start;	/* *** place this word before making instance of r01lib classes *** */

SPI	spi( 1000000, 0 );	//	SCK frequency, mode

class PCA9957 : public SPI
{
public:
	enum	{
		MODE1	= 0x00,
		MODE2,
		LEDOUT0	= 0x08,
		PWM0	= 0x10,
		PWMALL	= 0x6A,
		IREFALL
	};

	PCA9957( SPI &spi ) : _spi( spi )
	{
		reg( MODE2,   0x18 );
		reg( IREFALL, 0x10 );
		for ( int i = 0; i < 6; i++ )
			reg( i + LEDOUT0, 0xAA );
	}
	~PCA9957() {}

	void reg( uint8_t reg_addr, uint8_t value )
	{
		uint8_t	w_data[ 2 ];

		w_data[ 0 ]	= reg_addr << 1;
		w_data[ 1 ]	= value;

		_spi.write( w_data, NULL, sizeof( w_data ) );
	}

	uint8_t reg( uint8_t reg_addr )
	{
		uint8_t	w_data[ 2 ];
		uint8_t	r_data[ 2 ];

		w_data[ 0 ]	= (reg_addr << 1) | 0x01;
		w_data[ 1 ]	= 0xFF;

		_spi.write( w_data, r_data, sizeof( w_data ) );

		return r_data[ 1 ];
	}

	void pwm( uint8_t channel, uint8_t value )
	{
		reg( channel + PWM0, value );
	}

private:
	SPI		&_spi;
};

PCA9957	ledd( spi );
DigitalOut	oe( D8 );
DigitalOut	rst( D9 );

int main(void)
{
#if 0
	uint8_t	w_data[]	= { 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07 };
	uint8_t	r_data[]	= { 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07 };
#endif

	rst	= 1;
	oe	= 0;


	while ( true )
	{
		//spi.write( w_data, r_data, sizeof( w_data ) );

		for ( int i = 0; i < 256; i++ )
		{
			ledd.pwm( 0, i );
			wait( 0.01 );
		}
	}
}
